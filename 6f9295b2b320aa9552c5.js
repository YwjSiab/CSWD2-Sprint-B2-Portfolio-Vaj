const express=require("express"),path=require("path"),app=express(),PORT=process.env.PORT||3e3,fs=require("fs");app.use(express.static(path.join(__dirname))),app.use(express.json()),app.listen(PORT,()=>console.log(`Server running on port ${PORT}`)),app.get("/",(e,r)=>{r.sendFile(path.join(__dirname,"index.html"))}),app.get("/api/projects",(e,r)=>{const t=path.join(__dirname,"projects.json");if(!fs.existsSync(t))return console.error("❌ File not found:",t),r.status(404).json({error:"Project data not found"});fs.readFile(t,"utf8",(e,t)=>{if(e)return console.error("❌ Failed to read projects.json:",e),r.status(500).json({error:"Could not load project data"});try{const e=JSON.parse(t);r.json(e)}catch(e){console.error("❌ Invalid JSON in projects.json:",e),r.status(500).json({error:"Malformed JSON in project data"})}})}),app.post("/api/projects",(e,r)=>{try{const t=e.body;if(!t.title||"string"!=typeof t.title||0===t.title.trim().length)return r.status(400).json({error:"Invalid project title"});if(!t.description||"string"!=typeof t.description||t.description.trim().length<10)return r.status(400).json({error:"Description must be at least 10 characters"});if(!Array.isArray(t.techStack)||0===t.techStack.length||!t.techStack.every(e=>"string"==typeof e))return r.status(400).json({error:"Invalid tech stack format"});console.log("✅ New project received:"),console.log(t),r.status(200).json({message:"Project saved successfully"})}catch(e){console.error("❌ Error in /api/projects:",e),r.status(500).json({error:"Internal server error in POST /api/projects"})}}),app.use((e,r)=>{r.status(404).send("Page not found")}),app.use((e,r,t)=>{console.error("Unhandled error:",e.stack),t.status(500).json({error:"Something went wrong"})}),app.listen(PORT,()=>{console.log(`🚀 Server running at http://localhost:${PORT}`)});